- name: Search Inside - Secrets
  openshift:
    apiVersion: v1
    kind: Secret
    metadata:
      name: search-inside-secrets
      namespace: "{{ openshift_namespace }}"
    type: Opaque
    data: >-
      {{ _data | from_yaml }}
  vars:
    _data: |
      SEARCH_INSIDE_SESSION_SECRET: "{{ searchinside_session_secret | b64encode }}"
      SEARCH_INSIDE_ELASTIC_USERNAME: "{{ searchinside_elastic_username | b64encode }}"
      SEARCH_INSIDE_ELASTIC_PASSWORD: "{{ searchinside_elastic_password | b64encode }}"
      SEARCH_INSIDE_API_RO_USERNAME: "{{ searchinside_api_ro_username | b64encode }}"
      SEARCH_INSIDE_API_RO_PASSWORD: "{{ searchinside_api_ro_password | b64encode }}"

- name: Elastic - Image Stream
  when: >-
    openshift_namespace == "wwp-test"
  openshift_imagestream:
    state: latest
    metadata:
      namespace: "{{ openshift_namespace }}"
      name: search-inside-elastic
    git:
      repository: "{{ searchinside_git_uri }}"
      path: docker_elasticsearch
    strategy:
      dockerStrategy:
        env:
          - name: SEARCH_INSIDE_API_RO_USERNAME
            valueFrom:
              secretKeyRef:
                name: search-inside-secrets
                key: SEARCH_INSIDE_API_RO_USERNAME
          - name: SEARCH_INSIDE_API_RO_PASSWORD
            valueFrom:
              secretKeyRef:
                name: search-inside-secrets
                key: SEARCH_INSIDE_API_RO_PASSWORD
    spec:
      resources:
        limits:
          cpu: '1'
          memory: 4Gi
        requests:
          cpu: '1'
          memory: 4Gi
  register: _openshift_image_search_inside_elastic

- name: Elastic - Rebuild image
  when:
    - >
      ( (_openshift_image_search_inside_elastic | default({})) is changed )
      or
      "elastic.rebuild" in ansible_run_tags
    - >-
      openshift_namespace == "wwp-test"
  shell: "oc -n {{ openshift_namespace }} start-build --wait search-inside-elastic"
  delegate_to: localhost
  tags:
    - elastic.rebuild

- name: Elastic - Deployment Config
  openshift:
    apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      name: search-inside-elastic
      namespace: "{{ openshift_namespace }}"
    spec:
      replicas: 1
      selector:
        deployment-config.name: search-inside-elastic
      template:
        metadata:
          creationTimestamp: null
          labels:
            deployment-config.name: search-inside-elastic
        spec:
          containers:
            - env:
              - name: bootstrap.memory_lock
                value: 'true'
              - name: ES_JAVA_OPTS
                value: '-Xms2g -Xmx2g'
              - name: xpack.security.enabled
                value: 'true'
              - name: ELASTIC_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: search-inside-secrets
                    key: SEARCH_INSIDE_ELASTIC_PASSWORD
              - name: discovery.type
                value: 'single-node'
              image: 'docker-registry.default.svc:5000/{{ openshift_namespace }}/search-inside-elastic:{{ searchinside_image_tag }}'
              imagePullPolicy: Always
              name: search-inside-elastic
              resources:
                requests:
                  memory: '4Gi'
                limits:
                  memory: '4Gi'
              readinessProbe:
                exec:
                  command:
                    - sh
                    - -c
                    - |
                      #!/usr/bin/env/bash
                      if curl -u {{ searchinside_api_ro_username }}:{{ searchinside_api_ro_password }} http://localhost:9200/; then
                        exit 0
                      else
                        exit 1
                      fi
                initialDelaySeconds: 5
                timeoutSeconds: 30
                periodSeconds: 60
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          terminationGracePeriodSeconds: 30
      triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - search-inside-elastic
            from:
              kind: ImageStreamTag
              name: 'search-inside-elastic:{{ searchinside_image_tag }}'
              namespace: "{{ openshift_namespace }}"

- name: Elastic - Service
  openshift:
    state: latest
    apiVersion: v1
    kind: Service
    metadata:
      name: "{{ searchinside_elastic_servicename }}"
      namespace: "{{ openshift_namespace }}"
    spec:
      type: ClusterIP
      ports:
        - port: "{{ searchinside_elastic_port }}"
          protocol: TCP
          targetPort: "{{ searchinside_elastic_port }}"
      selector:
        deployment-config.name: search-inside-elastic

- name: Kibana - Image Stream
  when: >-
    openshift_namespace == "wwp-test"
  openshift_imagestream:
    metadata:
      name: search-inside-kibana
      namespace: "{{ openshift_namespace }}"
    tag: 8.3.1
    from: docker.elastic.co/kibana/kibana:8.3.1
  register: _openshift_image_search_inside_kibana

- name: Kibana - Rebuild image
  when:
    - >
      ( (_openshift_image_search_inside_kibana | default({})) is changed )
      or
      "kibana.rebuild" in ansible_run_tags
    - >-
      openshift_namespace == "wwp-test"
  shell: "oc -n {{ openshift_namespace }} start-build --wait search-inside-kibana"
  delegate_to: localhost
  tags:
    - kibana.rebuild

- name: Kibana - Deployment Config
  openshift:
    apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      name: search-inside-kibana
      namespace: "{{ openshift_namespace }}"
    spec:
      replicas: 1
      selector:
        deployment-config.name: search-inside-kibana
      template:
        metadata:
          creationTimestamp: null
          labels:
            deployment-config.name: search-inside-kibana
        spec:
          containers:
            - env:
              - name: ELASTICSEARCH_URL
                value: "http://{{ searchinside_elastic_servicename }}.{{ openshift_namespace }}.svc:9200"
              - name: ELASTICSEARCH_HOSTS
                value: "http://{{ searchinside_elastic_servicename }}.{{ openshift_namespace }}.svc:9200"
              image: 'docker-registry.default.svc:5000/{{ openshift_namespace }}/search-inside-kibana:{{ searchinside_image_tag }}'
              imagePullPolicy: Always
              name: search-inside-kibana
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          terminationGracePeriodSeconds: 30
      triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - search-inside-kibana
            from:
              kind: ImageStreamTag
              name: 'search-inside-kibana:{{ searchinside_image_tag }}'
              namespace: "{{ openshift_namespace }}"

- name: Kibana - Service
  openshift:
    state: latest
    apiVersion: v1
    kind: Service
    metadata:
      name: "{{ searchinside_kibana_servicename }}"
      namespace: "{{ openshift_namespace }}"
    spec:
      type: ClusterIP
      ports:
        - port: "{{ searchinside_kibana_port }}"
          protocol: TCP
          targetPort: "{{ searchinside_kibana_port }}"
      selector:
        deployment-config.name: search-inside-kibana

- name: "Pull {{ nodejs_base_image_mirrored_from }} into {{ nodejs_base_image_mirrored_to }}"
  when: >-
    openshift_namespace == "wwp-test"
  delegate_to: localhost
  openshift_imagestream:
    metadata:
      name: "{{ nodejs_base_image_name }}"
      namespace: "{{ openshift_namespace }}"
    from: "{{ nodejs_base_image_mirrored_from }}"
    tag: "{{ nodejs_base_image_tag }}"

- name: Promote wwp-test search-inside-* images to wwp
  when: >-
    openshift_is_production and
    ("images.promote" in ansible_run_tags)
  local_action:
    module: shell
    cmd: |
      oc tag wwp-test/search-inside-elastic:latest wwp/search-inside-elastic:prod
      oc tag wwp-test/search-inside-kibana:latest wwp/search-inside-kibana:prod
  tags: images.promote

- name: NodeJS api - Image Stream
  when: >-
    openshift_namespace == "wwp-test"
  openshift_imagestream:
    state: latest
    metadata:
      namespace: "{{ openshift_namespace }}"
      name: search-inside-nodeapi
    git:
      repository: "{{ searchinside_git_uri }}"
      path: docker_nodeapi
  register: _openshift_image_search_inside_nodeapi

- name: NodeJS api - Rebuild image
  when:
    - >
      ( (_openshift_image_search_inside_nodeapi | default({})) is changed )
      or
      "nodeapi.rebuild" in ansible_run_tags
    - >-
      openshift_namespace == "wwp-test"
  shell: "oc -n {{ openshift_namespace }} start-build --wait search-inside-nodeapi"
  delegate_to: localhost
  tags:
    - nodeapi.rebuild

- name: NodeJS api - Deployment Config
  openshift:
    apiVersion: apps.openshift.io/v1
    kind: DeploymentConfig
    metadata:
      name: search-inside-nodeapi
      namespace: "{{ openshift_namespace }}"
    spec:
      replicas: 1
      selector:
        deployment-config.name: search-inside-nodeapi
      template:
        metadata:
          creationTimestamp: null
          labels:
            deployment-config.name: search-inside-nodeapi
        spec:
          containers:
            - env:
              - name: SEARCH_INSIDE_ELASTICSEARCH_URL
                value: 'http://search-inside-elastic.{{ openshift_namespace }}.svc:9200'
              - name: SEARCH_INSIDE_SEARCH_URL
                value: 'https://test-search.epfl.ch'
              - name: SEARCH_INSIDE_ALLOW_EXTERNAL
                value: 'False'
              - name: NODE_ENV
                value: 'production'
              - name: SEARCH_INSIDE_SESSION_SECRET
                valueFrom:
                  secretKeyRef:
                    name: search-inside-secrets
                    key: SEARCH_INSIDE_SESSION_SECRET
              - name: SEARCH_INSIDE_API_RO_USERNAME
                valueFrom:
                  secretKeyRef:
                    name: search-inside-secrets
                    key: SEARCH_INSIDE_API_RO_USERNAME
              - name: SEARCH_INSIDE_API_RO_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: search-inside-secrets
                    key: SEARCH_INSIDE_API_RO_PASSWORD
              image: 'docker-registry.default.svc:5000/{{ openshift_namespace }}/search-inside-nodeapi:{{ searchinside_image_tag }}'
              imagePullPolicy: Always
              name: search-inside-nodeapi
          dnsPolicy: ClusterFirst
          restartPolicy: Always
          schedulerName: default-scheduler
          terminationGracePeriodSeconds: 30
      triggers:
        - type: ImageChange
          imageChangeParams:
            automatic: true
            containerNames:
              - search-inside-nodeapi
            from:
              kind: ImageStreamTag
              name: 'search-inside-nodeapi:{{ searchinside_image_tag }}'
              namespace: "{{ openshift_namespace }}"

- name: NodeJS api - Service
  openshift:
    state: latest
    apiVersion: v1
    kind: Service
    metadata:
      name: "{{ searchinside_nodeapi_servicename }}"
      namespace: "{{ openshift_namespace }}"
    spec:
      type: ClusterIP
      ports:
        - port: "{{ searchinside_nodeapi_port }}"
          protocol: TCP
          targetPort: "{{ searchinside_nodeapi_port }}"
      selector:
        deployment-config.name: search-inside-nodeapi
